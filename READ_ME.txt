
その前にまずは用語を定義する必要がある．

・無人島
1マスも周りが開いていないマスの集団のこと．また，そのマス自体も指す．
また，無人島に属するマスの数を M とする．

・未開
マスが開いていないこと．

・フラグ
地雷が入っていることを示すBool値．

・全体の地雷の数
Bと定義．

A.未開であり無人島でないマスの座標と状態を表す配列を生成する．
　target[マスの通し番号][マスの情報を指定する番号]
　情報指定番号 0 :マスのx座標
　情報指定番号 1 :マスのy座標
　情報指定番号 2 :マスの状態(以下で示す 0 〜 2 の番号によって規定される)
　情報指定番号 3 :マスに地雷が入ると判定された回数
　
　また，試行回数を数えるための変数を count, 無人島の地雷の確率を数えるための変数を count_M とする．


B.targetに入っているマス全てに対して，可能な限りで
　0 (地雷の入っていないマス) 
　1 (地雷が確実に入っているマス) 
　をマスの状態として割り振る．

C.もしも 0 に属するマスを一つでも発見した場合は，一旦開けて A に戻る．

D.ここまで来ている場合は全てのマスの状態が 1 もしくは None であるから，最もマスの通し番号が小さい状態が None であるマスに対して，
　2 (地雷を仮定するマス)
　をマスの状態として割り振る．

E.状態 2 のマスにも地雷が入っていると仮定してもう一度状態 0 or 1 を割り振る(ここで地雷が入っていると判明する場合，もともと他のマスに地雷が入っていると仮定したため，地雷が入っていると確定するが，状態 1 を仮定する)．

F.全てのマスが 0,1,2 のどれかに属するまで D と E を繰り返す．もしくはマスに書いてある番号よりも多くの地雷が存在する，もしくはマスに書いてある番号からして安全なマスが周りに多すぎるというような矛盾が見られた場合は その時点の targetの配列でマスの状態が 2 となっているマスが複数存在する場合，通し番号の最も大きなマスの状態を 0 に切り替えて D に戻る．一つのみしか存在しない場合はそのマスを開けて，A に戻る．

G.全てのマスがどれかの属性に割り振られたあとに，target配列のマスの状態数 1 or 2 となっているマスの数を B_{target, i}(i回目のときのB_{target})とし， 未開 1 or 2 を振られているマス全ての「情報指定番号 3」の「マスに地雷が入ると判定された回数」と count に対して，$_{M}C_{B-B{target,i}}$
を加える．また，count_M に対して，$_{M - 1}C_{B-B{target,i} - 1}$ を加える．

H.マスの状態が 2 になっている最も通し番号の大きいマスの状態を 0，それよりも通し番号の大きいマスの状態を None に切り替えて，D に戻る．この時点で None と 2 になるマスが存在しない場合，全ての試行が終了したことになるので確率計算の作業に入る．

I.targetの全てのマスに対して，「マスに地雷が入ると判定された回数」を count で割る．また，count_M / count を求める．これらの値を全て比較し，最も値の小さなマスを選択し，開く．
